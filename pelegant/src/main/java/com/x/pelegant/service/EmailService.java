package com.x.pelegant.service;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;
import org.springframework.mail.javamail.MimeMessageHelper;

import javax.mail.internet.MimeMessage;

/**
 * 邮件服务类
 */
@Service
@Slf4j
public class EmailService {

    @Autowired
    private JavaMailSender mailSender;

    @Value("${spring.mail.username:noreply@pelegant.com}")
    private String fromEmail;

    /**
     * 发送密码重置邮件
     */
    public boolean sendPasswordResetEmail(String toEmail, String recipientName, String newPassword, String schoolName) {
        try {
            log.info("发送密码重置邮件: {} - {}", toEmail, schoolName);
            MimeMessage mimeMessage = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true, "UTF-8");
            // 构建 HTML 内容


            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(toEmail);
            message.setSubject("【Pelegant System 】 School Administrator Password Reset Notification");

            String htmlContent = buildPasswordResetEmailContent(toEmail,recipientName, newPassword, schoolName);

            // 设置 HTML 邮件
            helper.setText(htmlContent, true);


            mailSender.send(message);
            log.info("密码重置邮件发送成功: {}", toEmail);
            return true;

        } catch (Exception e) {
            log.error("发送密码重置邮件失败: {} - {}", toEmail, e.getMessage(), e);
            return false;
        }
    }

    /**
     * 发送初始密码邮件
     */
    public boolean sendInitialPasswordEmail(String toEmail, String recipientName, String initialPassword,
                                            String schoolName) {
        try {
            log.info("发送初始密码邮件: {} - {}", toEmail, schoolName);

            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(toEmail);
            message.setSubject("【Pelegant System 】 School Administrator Account Creation notification");

            String emailContent = buildInitialPasswordEmailContent(recipientName, initialPassword, schoolName);
            message.setText(emailContent);

            mailSender.send(message);
            log.info("初始密码邮件发送成功: {}", toEmail);
            return true;

        } catch (Exception e) {
            log.error("发送初始密码邮件失败: {} - {}", toEmail, e.getMessage(), e);
            return false;
        }
    }

    /**
     * 构建密码重置邮件内容
     */
    private String buildPasswordResetEmailContent(String toEmail,String recipientName, String newPassword, String schoolName) {
        StringBuilder content = new StringBuilder();
        content.append("Dear ").append(recipientName).append(",\n\n");
        content.append("Hello!\n\n");
        content.append("Your administrator account for ").append(schoolName).append(" in the Pelegant system has had its password reset.\n\n");
        content.append("Your new login password is: ").append(newPassword).append("\n\n");
        content.append("For your account's security, please change your password immediately after your first login.\n\n");
        content.append("Login URL: http://pelegant.info:8083\n");
        content.append("User Type: Administrator\n\n");
        content.append("If you did not request a password reset, please contact the system administrator immediately.\n\n");
        content.append("This email is automatically generated by the system, please do not reply.\n\n");
        content.append("Pelegant System\n");
        content.append("Sent on: ").append(java.time.LocalDateTime.now().format(
                java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")));

        return content.toString();
    }


    /**
     * 构建初始密码邮件内容
     */
    private String buildInitialPasswordEmailContent(String recipientName, String initialPassword, String schoolName) {
        StringBuilder content = new StringBuilder();
        content.append("Dear ").append(recipientName).append(",\n\n");
        content.append("Hello!\n\n");
        content.append("Welcome to the Pelegant system! You have been set as the administrator for ").append(schoolName).append(".\n\n");
        content.append("Your login details are as follows:\n");
        content.append("Login Email: ").append("（The email you received this message at）").append("\n");
        content.append("Initial Password: ").append(initialPassword).append("\n\n");
        content.append("Please use the above information to log in to the system, and change your password after the first login.\n\n");
        content.append("Login URL: http://pelegant.info:8083\n");
        content.append("User Type: Administrator\n\n");
        content.append("If you have any questions, please contact the system administrator.\n\n");
        content.append("This email is automatically generated by the system, please do not reply.\n\n");
        content.append("Pelegant System\n");
        content.append("Sent on: ").append(java.time.LocalDateTime.now().format(
                java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")));

        return content.toString();
    }


    /**
     * 发送学生初始密码邮件
     */
    public boolean sendStudentInitialPasswordEmail(String toEmail, String studentName,
                                                   String schoolName, String password) {
        try {
            log.info("发送学生初始密码邮件: {} - {}", toEmail, schoolName);

            MimeMessage mimeMessage = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true, "UTF-8");

            helper.setFrom(fromEmail);
            helper.setTo(toEmail);
            helper.setSubject("【Pelegant System】Student account Creation notification");

            // 构建 HTML 内容
            String htmlContent = buildStudentInitialPasswordEmailContent(toEmail,studentName, password, schoolName);

            // 设置 HTML 邮件
            helper.setText(htmlContent, true);

            mailSender.send(mimeMessage);
            log.info("学生初始密码邮件发送成功: {}", toEmail);
            return true;

        } catch (Exception e) {
            log.error("发送学生初始密码邮件失败: {} - {}", toEmail, e.getMessage(), e);
            return false;
        }
    }


    /**
     * 构建学生初始密码邮件内容
     */
    private String buildStudentInitialPasswordEmailContent(String toEmail,String studentName, String initialPassword, String schoolName) {
        return "<!DOCTYPE html>" +
                "<html lang='en'>" +
                "<head><meta charset='UTF-8'><meta name='viewport' content='width=device-width, initial-scale=1.0'>" +
                "<style>" +
                "body {font-family: Arial, sans-serif; background-color:#e6f0fa; margin:0; padding:0;}" +
                ".container {max-width:600px; width:90%; margin:30px auto; background:#ffffff; padding:25px; border-radius:10px; box-shadow:0 4px 12px rgba(0,0,0,0.1); box-sizing:border-box;}" +
                ".header {text-align:center; font-size:22px; color:#0a3d91; margin-bottom:20px;}" +
                ".content {font-size:16px; color:#333; line-height:1.6;}" +
                ".button {display:inline-block; padding:12px 24px; background:#0a3d91; color:#ffffff; text-decoration:none; border-radius:6px; margin:15px 0; text-align:center;}" +
                ".footer {text-align:center; font-size:12px; color:#777; margin-top:25px;}" +
                "@media only screen and (max-width: 480px) {" +
                "  .container {padding:15px;}" +
                "  .header {font-size:20px;}" +
                "  .content {font-size:15px;}" +
                "  .button {width:100%; padding:12px 0;}" +
                "}" +
                "</style></head>" +
                "<body>" +
                "<div class='container'>" +
                "<div class='header'>Welcome to Pelegant System</div>" +
                "<div class='content'>" +
                "<p>Dear " + studentName + ",</p>" +
                "<p>Hello!</p>" +
                "<p>Welcome to the Pelegant system! Your student account has been successfully created.</p>" +
                "<strong>School:</strong> " + schoolName + "<br>" +
                "<strong>User Type:</strong> Student</p>" +
                "<p><strong>Login Email:</strong>"+toEmail+"<br>" +
                "<strong>Initial Password:</strong> " + initialPassword + "<br>" +
                "<p style='text-align:center;'><a href='http://pelegant.info:8081' class='button'>Login Now</a></p>" +
                "<p>Please use the above information to log in to the system, complete your personal information, and change your password after the first login.</p>" +
                "<p>If you have any questions, please contact your school administrator or the system administrator.</p>" +
                "</div>" +
                "<div class='footer'>Pelegant System | Automatically generated, please do not reply | " +
                java.time.LocalDateTime.now().format(java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")) +
                "</div>" +
                "</div></body></html>";
    }

    /**
     * 发送企业管理员初始密码邮件
     */
    public boolean sendCompanyAdminInitialPasswordEmail(String toEmail, String adminName, String initialPassword,
                                                        String companyName) {
        try {
            log.info("发送企业管理员初始密码邮件: {} - {}", toEmail, companyName);

            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(toEmail);
            message.setSubject("【Pelegant System 】 Enterprise Administrator Account Creation Notification");

            String emailContent = buildCompanyAdminInitialPasswordEmailContent(adminName, initialPassword, companyName);
            message.setText(emailContent);

            mailSender.send(message);
            log.info("企业管理员初始密码邮件发送成功: {}", toEmail);
            return true;

        } catch (Exception e) {
            log.error("发送企业管理员初始密码邮件失败: {} - {}", toEmail, e.getMessage(), e);
            return false;
        }
    }

    /**
     * 构建企业管理员初始密码邮件内容
     */
    private String buildCompanyAdminInitialPasswordEmailContent(String adminName, String initialPassword,
                                                                String companyName) {
        StringBuilder content = new StringBuilder();
        content.append("Dear ").append(adminName).append(",\n\n");
        content.append("Hello!\n\n");
        content.append("Welcome to the Pelegant system! You have been assigned as the company administrator for ").append(companyName).append(".\n\n");
        content.append("Your login details are as follows:\n");
        content.append("Login Email: ").append("（The email you received this message at）").append("\n");
        content.append("Initial Password: ").append(initialPassword).append("\n");
        content.append("Company: ").append(companyName).append("\n\n");
        content.append("Please use the above information to log in to the system, and complete the company information and change your password after the first login.\n\n");
        content.append("Login URL: http://pelegant.info:8083/\n");
        content.append("User Type: Company Administrator\n\n");
        content.append("If you have any questions, please contact the system administrator.\n\n");
        content.append("This email is automatically generated by the system, please do not reply.\n\n");
        content.append("Pelegant System\n");
        content.append("Sent on: ").append(java.time.LocalDateTime.now().format(
                java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")));

        return content.toString();
    }


    /**
     * 发送项目管理员初始密码邮件
     */
    public boolean sendProjectAdminInitialPasswordEmail(String toEmail, String adminName, String initialPassword,
                                                        String department) {
        try {
            log.info("发送项目管理员初始密码邮件: {} - {}", toEmail, department);

            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(toEmail);
            message.setSubject("【Pelegant System 】 Project Administrator Account Creation notification");

            String emailContent = buildProjectAdminInitialPasswordEmailContent(adminName, initialPassword, department);
            message.setText(emailContent);

            mailSender.send(message);
            log.info("项目管理员初始密码邮件发送成功: {}", toEmail);
            return true;

        } catch (Exception e) {
            log.error("发送项目管理员初始密码邮件失败: {} - {}", toEmail, e.getMessage(), e);
            return false;
        }
    }

    /**
     * 构建项目管理员初始密码邮件内容
     */
    private String buildProjectAdminInitialPasswordEmailContent(String adminName, String initialPassword,
                                                                String department) {
        StringBuilder content = new StringBuilder();
        content.append("Dear ").append(adminName).append(",\n\n");
        content.append("Hello!\n\n");
        content.append("Welcome to the Pelegant system! Your project administrator account has been successfully created.\n\n");
        content.append("Your login details are as follows:\n");
        content.append("Login Email: ").append("（The email you received this message at）").append("\n");
        content.append("Initial Password: ").append(initialPassword).append("\n");
        content.append("Department: ").append(department != null ? department : "Not specified").append("\n\n");
        content.append("Please use the above information to log in to the system, and complete your personal information and change your password after the first login.\n\n");
        content.append("Login URL: http://pelegant.info:8083\n");
        content.append("User Type: Project Administrator\n\n");
        content.append("If you have any questions, please contact the system administrator.\n\n");
        content.append("This email is automatically generated by the system, please do not reply.\n\n");
        content.append("Pelegant System\n");
        content.append("Sent on: ").append(java.time.LocalDateTime.now().format(
                java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")));

        return content.toString();
    }


    /**
     * 发送教师初始密码邮件
     */
    public boolean sendTeacherInitialPasswordEmail(String toEmail, String teacherName, String initialPassword) {
        try {
            log.info("发送教师初始密码邮件: {}", toEmail);

            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(toEmail);
            message.setSubject("【Pelegant System 】 Teacher Account Creation notification");

            String content = buildTeacherInitialPasswordEmailContent(teacherName, initialPassword);
            message.setText(content);

            mailSender.send(message);
            log.info("教师初始密码邮件发送成功: {}", toEmail);
            return true;

        } catch (Exception e) {
            log.error("发送教师初始密码邮件失败", e);
            return false;
        }
    }

    /**
     * 构建教师初始密码邮件内容
     */
    private String buildTeacherInitialPasswordEmailContent(String teacherName, String initialPassword) {
        StringBuilder content = new StringBuilder();
        content.append("Dear ").append(teacherName).append(",\n\n");
        content.append("Hello!\n\n");
        content.append("Welcome to the Pelegant system! Your teacher account has been successfully created.\n\n");
        content.append("Your login details are as follows:\n");
        content.append("Login Email: ").append("（The email you received this message at）").append("\n");
        content.append("Initial Password: ").append(initialPassword).append("\n\n");
        content.append("Please use the above information to log in to the system, and change your password after the first login.\n\n");
        content.append("Login URL: http://pelegant.info:8082\n");
        content.append("User Type: Teacher\n\n");
        content.append("If you have any questions, please contact the system administrator.\n\n");
        content.append("This email is automatically generated by the system, please do not reply.\n\n");
        content.append("Pelegant System\n");
        content.append("Sent on: ").append(java.time.LocalDateTime.now().format(
                java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")));

        return content.toString();
    }

}
